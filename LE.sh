#!/bin/bash

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
LOGO_URL="https://raw.githubusercontent.com/ProNodeRunner/Logo/main/Logo"
ORANGE='\033[0;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'
NODE_DIR="light-node"
MERKLE_DIR="risc0-merkle-service"

show_logo() {
    echo -e "${ORANGE}"
    curl -sSf $LOGO_URL 2>/dev/null || echo "=== LAYEREDGE NODE MANAGER ==="
    echo -e "${NC}"
}

show_menu() {
    clear
    show_logo
    echo -e "${ORANGE}1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo -e "2. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo -e "3. –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo -e "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
    echo -e "5. –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
    echo -e "6. –í—ã—Ö–æ–¥${NC}"
}

install_dependencies() {
    echo -e "${ORANGE}[1/5] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    sudo apt-get update -yq
    sudo apt-get install -yq git curl build-essential
    
    echo -e "${ORANGE}[2/5] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go 1.18...${NC}"
    sudo add-apt-repository -y ppa:longsleep/golang-backports
    sudo apt-get install -yq golang-1.18
    echo 'export PATH=$PATH:/usr/lib/go-1.18/bin' >> ~/.bashrc
    source ~/.bashrc

    echo -e "${ORANGE}[3/5] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust...${NC}"
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    source "$HOME/.cargo/env"
    rustup default 1.81.0

    echo -e "${ORANGE}[4/5] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Risc0...${NC}"
    curl -L https://risczero.com/install | bash
    source "$HOME/.cargo/env"
    rzup install
}

setup_project() {
    echo -e "${ORANGE}[5/5] –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
    git clone https://github.com/Layer-Edge/light-node.git
    cd $NODE_DIR || exit 1

    read -p "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∫–æ—à–µ–ª—å–∫–∞: " PRIVATE_KEY
    cat > .env <<EOL
GRPC_URL=34.31.74.109:9090
CONTRACT_ADDR=cosmos1ufs3tlq4umljk0qfe8k5ya0x6hpavn897u2cnf9k0en9jr7qarqqt56709
ZK_PROVER_URL=http://127.0.0.1:3001
API_REQUEST_TIMEOUT=100
POINTS_API=http://127.0.0.1:8080
PRIVATE_KEY='$PRIVATE_KEY'
EOL

    echo -e "${GREEN}–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!${NC}"
}

start_services() {
    echo -e "${ORANGE}–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    
    # Merkle Service
    cd $MERKLE_DIR && cargo build --release >/dev/null 2>&1
    nohup cargo run --release > merkle.log 2>&1 &
    echo -e "${GREEN}Merkle-—Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω!${NC}"

    # Light Node
    cd ../ && go build -o layeredge-node >/dev/null 2>&1
    nohup ./layeredge-node > node.log 2>&1 &
    echo -e "${GREEN}Light Node –∑–∞–ø—É—â–µ–Ω!${NC}"
}

node_status() {
    echo -e "\n${ORANGE}=== –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í ===${NC}"
    pgrep -af "cargo run" | grep merkle | awk '{print $1 " Merkle: " ($2 ? "üü¢" : "üî¥")}'
    pgrep -af "./layeredge-node" | awk '{print $1 " Node:   " ($2 ? "üü¢" : "üî¥")}'
}

show_logs() {
    echo -e "\n${ORANGE}=== –õ–û–ì–ò MERCKLE ===${NC}"
    tail -n 10 $MERKLE_DIR/merkle.log
    
    echo -e "\n${ORANGE}=== –õ–û–ì–ò –ù–û–î–´ ===${NC}"
    tail -n 10 node.log
}

delete_node() {
    echo -e "${RED}–£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã...${NC}"
    pkill -f "layeredge-node"
    pkill -f "cargo run"
    rm -rf $NODE_DIR
    sudo apt-get purge -yq golang-1.18 rustc
}

while true; do
    show_menu
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: " choice

    case $choice in
        1) 
            install_dependencies
            setup_project
            start_services
            ;;
        2) node_status ;;
        3) show_logs ;;
        4) 
            pkill -f "layeredge-node"
            pkill -f "cargo run"
            start_services
            ;;
        5) delete_node ;;
        6) exit 0 ;;
        *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}" ;;
    esac
    
    read -p $'\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...'
done
